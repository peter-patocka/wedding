{"version":3,"sources":["app/components/Map.tsx","data/constants.ts","app/components/Header.tsx","app/components/PhotoGallery.tsx","assets/harmonia.jpg","app/components/WeddingTables.tsx","app/components/InvitationForm.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["Map","className","id","src","title","loading","GROOM","BRIDE","DATE","Date","Header","useEffect","$","simplyCountdown","year","getFullYear","month","getMonth","day","getDate","role","data-stellar-background-ratio","data-animate-effect","toLocaleDateString","toLocaleTimeString","href","target","getMilliseconds","alt","images","Array","NUMBER_OF_IMAGES_IN_GALLERY","map","_","i","index","original","process","thumbnail","PhotoGallery","items","WeddingTables","tables","JSON","parse","stringify","tablesJson","url","init","useState","response","setResponse","setLoading","hasError","setHasError","fetch","method","headers","then","json","result","catch","undefined","useFetch","forEach","value","arr","get","table_id","push","name","set","from","transformWeddingTableResponse","length","guests","reduce","prev","current","guest","css","InvitationForm","onSubmit","code","rows_affected","alert","initialValues","values","a","htmlFor","type","placeholder","App","harmonia","store","createStore","state","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.39defdd4.chunk.js","sourcesContent":["import React from 'react';\nimport './Map.css';\n\nexport const Map = () => {\n  return (\n    <div className=\"map component\" id=\"map\">\n        <iframe\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1676.1834654972256!2d17.112662658299218!3d48.139557784694354!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zNDjCsDA4JzIyLjQiTiAxN8KwMDYnNDkuNSJF!5e1!3m2!1sen!2ssk!4v1630833775901!5m2!1sen!2ssk\"\n            title=\"48°08'22.4 N 17°06'49.5 E\"\n            loading=\"lazy\">\n        </iframe>\n    </div>\n  );\n};\n","\nexport const GROOM = 'Peter Patočka';\nexport const BRIDE = 'Lucia Lászlóová';\nexport const DATE = new Date(2022, 5, 10, 11, 0);\nexport const NUMBER_OF_IMAGES_IN_GALLERY = 21;","import React, { useEffect } from 'react';\nimport './Header.css';\nimport { BRIDE, DATE, GROOM } from '../../data/constants';\nimport * as Icons from \"@material-ui/icons\";\n\nexport const Header = () => {\n\n    useEffect(() => {\n        // @ts-ignore\n        $('.simply-countdown-one').simplyCountdown({\n            year: DATE.getFullYear(),\n            month: DATE.getMonth() + 1,\n            day: DATE.getDate()\n        });\n    }, []);\n\n    return (\n        <div className=\"header component\">\n            <header id=\"fh5co-header\" className=\"fh5co-cover\" role=\"banner\"\n                    data-stellar-background-ratio=\"0.5\">\n                <div className=\"overlay\"/>\n                <div className=\"container container-full\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 col-md-offset-2 text-center\">\n                            <div className=\"display-t\">\n                                <div className=\"display-tc animate-box\" data-animate-effect=\"fadeIn\">\n                                    <h1>{BRIDE} &amp; {GROOM}</h1>\n                                    <h2>\n                                        <div className=\"header-date-time\">\n                                            <Icons.CalendarToday /> {DATE.toLocaleDateString()}\n                                            <Icons.Watch /> {DATE.toLocaleTimeString()}\n                                        </div>\n                                        <div className=\"header-place\">\n                                            <a href=\"https://www.lod.sk/sk/eventova-lod-harmonia/\" target=\"_blank\">\n                                                <Icons.DirectionsBoat /> <span className=\"text\">Loď Harmónia</span>\n                                            </a> na rieke Dunaj\n                                        </div>\n                                    </h2>\n                                    {DATE.getMilliseconds() < new Date().getMilliseconds() && (\n                                        <div className=\"simply-countdown simply-countdown-one\"/>\n                                    )}\n                                    <p className=\"save-date\">\n                                        <a href=\"https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=N3UwZzc0YThiczkya3NzOTNkN2g4dTkwbWUgMjB2dGxncm9oODMydG9kZDgzMzZzMDFiMTBAZw&amp;tmsrc=20vtlgroh832todd8336s01b10%40group.calendar.google.com\"\n                                           className=\"btn btn-default btn-sm\"\n                                           target=\"_blank\"\n                                        >\n                                            Save the date<br/>\n                                            <img src=\"https://www.google.com/calendar/images/ext/gc_button1_en.gif\" alt=\"Google Calendar\" />\n                                        </a>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        </div>\n    );\n};","import React from 'react';\nimport ImageGallery, { ReactImageGalleryItem } from 'react-image-gallery';\n\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './PhotoGallery.css';\nimport { NUMBER_OF_IMAGES_IN_GALLERY } from '../../data/constants';\n\nconst images: ReactImageGalleryItem[] = [...Array(NUMBER_OF_IMAGES_IN_GALLERY-1)].map((_, i) => {\n    const index = i+1;\n    const original = process.env.PUBLIC_URL + `/images/gallery/image_${index}.jpg`\n    const thumbnail = process.env.PUBLIC_URL + `/images/gallery/image_${index}_thumbnail.jpg`;\n    return { original, thumbnail }\n});\n\n/**\n * Photo gallery module shows images in responsive image gallery.\n * Navigation is included.\n * Mobile devices is supported.\n * URL to gallery: https://photos.app.goo.gl/5VAfYgihnvYTjmsb6\n */\nexport const PhotoGallery = () => {\n  return (\n    <div className=\"photos component\" id=\"photos\">\n          <ImageGallery items={images} />\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/harmonia.821d4a58.jpg\";","import React, { useEffect, useState } from 'react';\nimport tablesJson from '../../data/guestsList.json';\nimport './WeddingTables.css';\nimport { BRIDE, GROOM } from '../../data/constants';\nimport css from 'classnames';\nimport { WeddingTable } from '../../types/entity/WeddingTable';\n\ninterface Tables {\n    tables: Table[]\n}\ntype Table = Guest[];\ntype Guest = string;\n\nexport const WeddingTables = () => {\n    let tables: Table[] = getDataFromJson();\n\n    const [response, loading, hasError] = useFetch<WeddingTable[]>(\"/api/wedding-tables\");\n\n    const getTotalGuests = (): number => {\n        if(tables.length === 0) {\n            return 0;\n        }\n        return tables\n            .map(guests => guests.length)\n            .reduce((prev, current) => prev + current);\n    };\n\n    function transformWeddingTableResponse(response: WeddingTable[]): Table[] {\n        let map = new Map<string,Table>();\n        response.forEach(value => {\n           const arr: Table = map.get(value.table_id) || [];\n           arr.push(value.name);\n           map.set(value.table_id, arr);\n        });\n        return Array.from(map, ([_index, table]) => table);\n    }\n\n    if(!hasError && !loading && response) {\n        tables = transformWeddingTableResponse(response);\n    }\n\n    return (\n        <div className=\"wedding-tables-container component\" id=\"guests-list\">\n            <h2>Guests list</h2>\n            <h3>Total people: {getTotalGuests()}</h3>\n            <div className=\"wedding-tables\">\n                {tables.map((guests, index) => (\n                    <div className=\"wedding-table\" key={index}>\n                        <h3>Table {index + 1}</h3>\n                        <h4>({guests.length} people)</h4>\n                        <ul>\n                            {guests.map(guest => (\n                                <li key={guest} className={css({ \"bold\": guest == GROOM || guest == BRIDE})}>{guest}</li>\n                            ))}\n                        </ul>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nfunction getDataFromJson(): Table[] {\n    const tablesFile: Tables = JSON.parse(JSON.stringify(tablesJson));\n    return tablesFile.tables;\n}\n\nfunction useFetch<T>(url: string, init?: RequestInit): [T | undefined, boolean, boolean] {\n\n    const [response, setResponse] = useState<T>();\n    const [loading, setLoading] = useState(false);\n    const [hasError, setHasError] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json'\n            },\n            ...init,\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((json) => {\n                setResponse(json.result);\n                setLoading(false);\n            })\n            .catch(() => {\n                setHasError(true);\n                setLoading(false);\n                setResponse(undefined);\n            })\n    }, [ url ]);\n    return [ response, loading, hasError ]\n}\n","import React from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport './InvitationForm.css';\nimport { WeddingTable } from '../../types/entity/WeddingTable';\n\ninterface InvitationResult {\n    result: string;\n    num_rows_affected: number;\n    rows_affected?: WeddingTable[]\n}\n\nexport const InvitationForm = () => {\n\n    const onUpdate = (rows: WeddingTable[]) => {\n        alert('Thanks for your attendance!')\n    };\n\n    const onSubmit = (code: string) => {\n        fetch(\"/api/invitation/\"+code, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json'\n            },\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((json: InvitationResult) => {\n                if(json.result == 'updated') {\n                    onUpdate(json.rows_affected || []);\n                } else {\n                    alert('Invitation code is invalid.')\n                }\n            })\n            .catch(() => {\n                alert('Unable to accept invitation. Contact administrator.');\n            })\n    };\n\n    return (\n        <>\n            <div id=\"fh5co-started\" className=\"fh5co-bg\">\n                <div className=\"overlay\"></div>\n                <div className=\"container\">\n                    <div className=\"row animate-box\">\n                        <div className=\"col-md-8 col-md-offset-2 text-center fh5co-heading\">\n                            <h2>Are You Attending?</h2>\n                            <p>Please Fill-up the form to notify you that you're attending. Thanks.</p>\n                        </div>\n                    </div>\n                    <div className=\"row animate-box\">\n                        <div className=\"col-md-10 col-md-offset-3\">\n                            <Formik\n                                initialValues={{ code: \"\" }}\n                                onSubmit={async (values) => {\n                                    onSubmit(values.code);\n                                }}\n                            >\n                                <Form className=\"form-inline\">\n                                    <div className=\"col-md-4 col-sm-4\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"code\" className=\"sr-only\">Name</label>\n                                            <Field type=\"text\" name=\"code\" className=\"form-control\" placeholder=\"Invitation code\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4 col-sm-4\">\n                                        <button type=\"submit\" className=\"btn btn-default btn-block\">I am Attending</button>\n                                    </div>\n                                </Form>\n                            </Formik>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n","import React from 'react';\nimport { Map } from './app/components/Map'\nimport './App.css';\nimport { Header } from './app/components/Header';\nimport { PhotoGallery } from './app/components/PhotoGallery';\nimport harmonia from './assets/harmonia.jpg';\nimport { WeddingTables } from './app/components/WeddingTables';\nimport { InvitationForm } from './app/components/InvitationForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header/>\n        <InvitationForm />\n        <img src={harmonia} alt=\"Eventová loď Harmónia\" className=\"full-size\" />\n        <Map/>\n        <WeddingTables />\n        <PhotoGallery />\n    </div>\n  );\n}\n\nexport default App;\n","import { ThunkAction, Action, createStore } from '@reduxjs/toolkit';\n\nexport const store = createStore(state => state);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}