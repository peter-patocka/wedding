{"version":3,"sources":["store/guests/actions.ts","app/api.ts","store/guests/epics.ts","app/components/GuestForm.tsx","data/constants.ts","app/components/Header.tsx","app/components/InvitationForm.tsx","assets/harmonia.jpg","app/components/Map.tsx","app/components/WeddingTables.tsx","app/components/PhotoGallery.tsx","pages/HomePage.tsx","App.tsx","utils/setup.ts","serviceWorker.ts","store/rootEpic.ts","store/guests/reducer.ts","store/rootReducer.ts","store/configureStore.ts","history.ts","index.tsx"],"names":["REQUEST","RECEIVE","FETCH_ERROR","Api","code","onSuccess","fetch","method","headers","then","response","json","result","guests","rows_affected","Promise","reject","onFetchGuestsSuccess","type","payload","action$","pipe","ofType","mergeMap","action","acceptInvitation","data","catch","error","onFetchGuestsError","GuestForm","props","useState","isSending","setIsSending","dispatch","useDispatch","useSelector","state","useEffect","URLSearchParams","window","location","search","get","id","className","role","data-animate-effect","href","rel","target","isFetching","map","guest","index","htmlFor","placeholder","name","value","GROOM","BRIDE","DATE","Date","Header","$","simplyCountdown","year","getFullYear","month","getMonth","day","getDate","data-stellar-background-ratio","toLocaleDateString","toLocaleTimeString","getMilliseconds","src","alt","InvitationForm","initialValues","onSubmit","values","a","onUpdate","alert","Map","title","loading","WeddingTables","tables","url","init","setResponse","setLoading","hasError","setHasError","undefined","useFetch","forEach","arr","table_id","push","set","Array","from","transformWeddingTableResponse","length","reduce","prev","current","css","images","NUMBER_OF_IMAGES_IN_GALLERY","_","i","original","process","thumbnail","PhotoGallery","items","HomePage","navigate","useNavigate","rows","invitation_code","harmonia","App","path","element","this","log","console","packageJson","version","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","rootEpic","combineEpics","guestsEpic","reducer","createRootReducer","history","combineReducers","router","connectRouter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","epicMiddleware","createEpicMiddleware","middleWares","routerMiddleware","store","createStore","applyMiddleware","run","createBrowserHistory","Setup","configure","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ee058b2e.chunk.js","sourcesContent":["import { CustomAction } from '../../types/action';\nimport { CustomError } from '../../types/error';\nimport { Guest } from \"../../types/entity/Guest\";\n\nexport const REQUEST = 'REQUEST_TEXTS';\nexport const RECEIVE = 'RECEIVE_TEXTS';\nexport const FETCH_ERROR = 'FETCH_ERROR_TEXTS';\n\nexport interface GuestsRequestAction extends CustomAction<string> {\n  type: typeof REQUEST;\n  payload: string;\n}\n\nexport interface GuestsReceiveAction extends CustomAction<Guest[]> {\n  type: typeof RECEIVE;\n}\n\nexport interface GuestsFetchErrorAction extends CustomAction<CustomError> {\n  type: typeof FETCH_ERROR;\n}\n\nexport type GuestsActionTypes =\n  | GuestsRequestAction\n  | GuestsReceiveAction\n  | GuestsFetchErrorAction;\n","import { Guest } from \"../types/entity/Guest\";\n\nexport class Api {\n\n    static async acceptInvitation(code: string, onSuccess: (rows: Guest[]) => void = (() => undefined)): Promise<Guest[]> {\n        return await fetch(\"/api/invitation/\"+code, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json'\n            },\n        })\n        .then((response) => {\n            return response.json();\n        })\n        .then((json: InvitationResult) => {\n            if(json.result == 'success') {\n                const guests = json.rows_affected ?? [];\n                onSuccess(guests);\n                return guests;\n            }\n            return Promise.reject();\n        });\n    }\n}\n\ninterface InvitationResult {\n    result: string;\n    num_rows_affected: number;\n    rows_affected?: Guest[]\n}","// import { ActionsObservable } from 'redux-observable';\n// import { of, from } from 'rxjs';\nimport { Epic, ofType } from 'redux-observable';\nimport { mergeMap } from 'rxjs/operators';\nimport {\n  FETCH_ERROR,\n  GuestsActionTypes,\n  GuestsFetchErrorAction,\n  GuestsReceiveAction,\n  GuestsRequestAction,\n  RECEIVE,\n  REQUEST,\n} from './actions';\nimport { Guest } from \"../../types/entity/Guest\";\nimport { Api } from \"../../app/api\";\nimport { ApplicationState } from \"../../types/applicationState\";\n\nexport const fetchGuests = (invitationCode: string): GuestsRequestAction => ({\n  type: REQUEST,\n  payload: invitationCode,\n});\n\nexport const onFetchGuestsSuccess = (guests: Guest[]): GuestsReceiveAction => ({\n  type: RECEIVE,\n  payload: guests,\n});\n\nconst onFetchGuestsError = (error: any): GuestsFetchErrorAction => ({\n  type: FETCH_ERROR,\n  payload: error,\n  error: true,\n});\n\nexport const fetchGuestsEpic: Epic<GuestsActionTypes, GuestsRequestAction, ApplicationState> = action$ => action$.pipe(\n    ofType(REQUEST),\n    mergeMap((action: GuestsRequestAction) =>\n        Api.acceptInvitation(action.payload)\n            .then(data => onFetchGuestsSuccess(data))\n            .catch(error => onFetchGuestsError(error))\n    ),\n);\n\nexport default [fetchGuestsEpic];\n","import React, { useEffect, useState } from 'react';\nimport { Guest } from '../../types/entity/Guest';\nimport { fetchGuests } from \"../../store/guests/epics\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ApplicationState } from \"../../types/applicationState\";\n\ninterface  GuestFormProps {\n    guests?: Guest[]\n}\n\nexport const GuestForm = (props: GuestFormProps) => {\n\n    const [isSending, setIsSending] = useState(true);\n    const dispatch = useDispatch();\n    const guests = useSelector((state: ApplicationState) => state.guests);\n\n    useEffect(() => {\n        if (!isSending) {\n            return;\n        }\n\n        const queryParams = new URLSearchParams(window.location.search);\n        const code = queryParams.get(\"code\");\n        if(code) {\n            dispatch(fetchGuests(code));\n        }\n\n        setIsSending(false);\n    }, [isSending]);\n\n    return (\n        <>\n            <header id=\"fh5co-header\" className=\"fh5co-cover fh5co-cover-sm\" role=\"banner\">\n                <div className=\"overlay\"></div>\n                <div className=\"fh5co-container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 col-md-offset-2 text-center\">\n                            <div className=\"display-t\">\n                                <div className=\"display-tc animate-box\" data-animate-effect=\"fadeIn\">\n                                    <h1>Contact Us</h1>\n                                    <h2>Free HTML5 templates Made by <a href=\"http://freehtml5.co\"\n                                                                        rel=\"noreferrer\"\n                                                                        target=\"_blank\">FreeHTML5.co</a></h2>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n\n            <div className=\"fh5co-section\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 animate-box\">\n                            <h3>Get In Touch</h3>\n                            <form action=\"#\">\n                                {!guests.isFetching && !guests.error && guests.data.map((guest, index) => (\n                                    <div className=\"row form-group\" key={index}>\n                                        <div className=\"col-md-12\">\n                                            <label htmlFor=\"fname\">First Name</label>\n                                            <input type=\"text\" id=\"fname\" className=\"form-control\"\n                                                   placeholder={guest.name} />\n                                        </div>\n                                    </div>\n                                ))}\n                                <div className=\"row form-group\">\n                                    <div className=\"col-md-6\">\n                                        <label htmlFor=\"fname\">First Name</label>\n                                        <input type=\"text\" id=\"fname\" className=\"form-control\"\n                                               placeholder=\"Your firstname\" />\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <label htmlFor=\"lname\">Last Name</label>\n                                        <input type=\"text\" id=\"lname\" className=\"form-control\"\n                                               placeholder=\"Your lastname\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"row form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label htmlFor=\"email\">Email</label>\n                                        <input type=\"text\" id=\"email\" className=\"form-control\"\n                                               placeholder=\"Your email address\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"row form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label htmlFor=\"subject\">Subject</label>\n                                        <input type=\"text\" id=\"subject\" className=\"form-control\"\n                                               placeholder=\"Your subject of this message\" />\n                                    </div>\n                                </div>\n\n                                <div className=\"row form-group\">\n                                    <div className=\"col-md-12\">\n                                        <label htmlFor=\"message\">Message</label>\n                                        <textarea name=\"message\" id=\"message\"\n                                                  className=\"form-control\" placeholder=\"Write us something\" />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"submit\" value=\"Send Message\" className=\"btn btn-primary\" />\n                                </div>\n\n                            </form>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </>\n    );\n};\n","\nexport const GROOM = 'Peter Patočka';\nexport const BRIDE = 'Lucia Lászlóová';\nexport const DATE = new Date(2022, 5, 10, 11, 0);\nexport const NUMBER_OF_IMAGES_IN_GALLERY = 21;\n\nexport const ENABLE_STATIC_GUESTS_LIST = false;","import React, { useEffect } from 'react';\nimport './Header.css';\nimport { BRIDE, DATE, GROOM } from '../../data/constants';\nimport * as Icons from \"@material-ui/icons\";\n\nexport const Header = () => {\n\n    useEffect(() => {\n        // @ts-ignore\n        $('.simply-countdown-one').simplyCountdown({\n            year: DATE.getFullYear(),\n            month: DATE.getMonth() + 1,\n            day: DATE.getDate()\n        });\n    }, []);\n\n    return (\n        <div className=\"header component\">\n            <header id=\"fh5co-header\" className=\"fh5co-cover\" role=\"banner\"\n                    data-stellar-background-ratio=\"0.5\">\n                <div className=\"overlay\"/>\n                <div className=\"container container-full\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 col-md-offset-2 text-center\">\n                            <div className=\"display-t\">\n                                <div className=\"display-tc animate-box\" data-animate-effect=\"fadeIn\">\n                                    <h1>{BRIDE} &amp; {GROOM}</h1>\n                                    <h2>\n                                        <div className=\"header-date-time\">\n                                            <Icons.CalendarToday /> {DATE.toLocaleDateString()}\n                                            <Icons.Watch /> {DATE.toLocaleTimeString()}\n                                        </div>\n                                        <div className=\"header-place\">\n                                            <a href=\"https://www.lod.sk/sk/eventova-lod-harmonia/\"\n                                               target=\"_blank\"\n                                               rel=\"noreferrer\"\n                                            >\n                                                <Icons.DirectionsBoat /> <span className=\"text\">Loď Harmónia</span>\n                                            </a> na rieke Dunaj\n                                        </div>\n                                    </h2>\n                                    {DATE.getMilliseconds() < new Date().getMilliseconds() && (\n                                        <div className=\"simply-countdown simply-countdown-one\"/>\n                                    )}\n                                    <p className=\"save-date\">\n                                        <a href=\"https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=N3UwZzc0YThiczkya3NzOTNkN2g4dTkwbWUgMjB2dGxncm9oODMydG9kZDgzMzZzMDFiMTBAZw&amp;tmsrc=20vtlgroh832todd8336s01b10%40group.calendar.google.com\"\n                                           className=\"btn btn-default btn-sm\"\n                                           rel=\"noreferrer\"\n                                           target=\"_blank\"\n                                        >\n                                            Save the date<br/>\n                                            <img src=\"https://www.google.com/calendar/images/ext/gc_button1_en.gif\" alt=\"Google Calendar\" />\n                                        </a>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        </div>\n    );\n};","import React from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport './InvitationForm.css';\nimport { Guest } from '../../types/entity/Guest';\nimport { Api } from \"../api\";\n\ninterface InvitationFormProps {\n    onUpdate?: (rows: Guest[]) => void;\n}\n\nexport const InvitationForm = (props: InvitationFormProps) => {\n    return (\n        <>\n            <div id=\"fh5co-started\" className=\"fh5co-bg\">\n                <div className=\"overlay\"></div>\n                <div className=\"container\">\n                    <div className=\"row animate-box\">\n                        <div className=\"col-md-8 col-md-offset-2 text-center fh5co-heading\">\n                            <h2>Are You Attending?</h2>\n                            <p>Please Fill-up the form to notify you that you&apos;re attending. Thanks.</p>\n                        </div>\n                    </div>\n                    <div className=\"row animate-box\">\n                        <div className=\"col-md-10 col-md-offset-3\">\n                            <Formik\n                                initialValues={{ code: \"\" }}\n                                onSubmit={async (values) => {\n                                    Api.acceptInvitation(values.code, props.onUpdate)\n                                        .catch(() => {\n                                            alert('Invitation code not found.');\n                                        });\n                                }}\n                            >\n                                <Form className=\"form-inline\">\n                                    <div className=\"col-md-4 col-sm-4\">\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"code\" className=\"sr-only\">Name</label>\n                                            <Field type=\"text\" name=\"code\" className=\"form-control\" placeholder=\"Invitation code\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-4 col-sm-4\">\n                                        <button type=\"submit\" className=\"btn btn-default btn-block\">I am Attending</button>\n                                    </div>\n                                </Form>\n                            </Formik>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/harmonia.821d4a58.jpg\";","import React from 'react';\nimport './Map.css';\n\nexport const Map = () => {\n  return (\n    <div className=\"map component\" id=\"map\">\n        <iframe\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1676.1834654972256!2d17.112662658299218!3d48.139557784694354!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zNDjCsDA4JzIyLjQiTiAxN8KwMDYnNDkuNSJF!5e1!3m2!1sen!2ssk!4v1630833775901!5m2!1sen!2ssk\"\n            title=\"48°08'22.4 N 17°06'49.5 E\"\n            loading=\"lazy\">\n        </iframe>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport tablesJson from '../../data/guestsList.json';\nimport './WeddingTables.css';\nimport {BRIDE, ENABLE_STATIC_GUESTS_LIST, GROOM} from '../../data/constants';\nimport css from 'classnames';\nimport { Guest } from '../../types/entity/Guest';\n\ninterface Tables {\n    tables: Table[]\n}\ntype Table = TableGuest[];\ntype TableGuest = string;\n\nexport const WeddingTables = () => {\n    const queryParams = new URLSearchParams(window.location.search);\n    if(queryParams.get(\"showGuestList\") != '1') {\n        return (\n          <></>\n        );\n    }\n\n    let tables: Table[] = ENABLE_STATIC_GUESTS_LIST ? getDataFromJson() : [];\n\n    const [response, loading, hasError] = useFetch<Guest[] | undefined>(\"/api/wedding-tables\");\n\n    const getTotalGuests = (): number => {\n        if(tables.length === 0) {\n            return 0;\n        }\n        return tables\n            .map(guests => guests.length)\n            .reduce((prev, current) => prev + current);\n    };\n\n    function transformWeddingTableResponse(response: Guest[]): Table[] {\n        const map = new Map<string,Table>();\n        response.forEach(value => {\n            const arr: Table = map.get(value.table_id) || [];\n            arr.push(value.name);\n            map.set(value.table_id, arr);\n        });\n        return Array.from(map, ([_index, table]) => table);\n    }\n\n    if(!hasError && !loading && response) {\n        tables = transformWeddingTableResponse(response);\n    }\n\n    return (\n        <div className=\"wedding-tables-container component\" id=\"guests-list\">\n            <h2>Guests list</h2>\n            <h3>Total people: {getTotalGuests()}</h3>\n            <div className=\"wedding-tables\">\n                {tables.map((guests, index) => (\n                    <div className=\"wedding-table\" key={index}>\n                        <h3>Table {index + 1}</h3>\n                        <h4>({guests.length} people)</h4>\n                        <ul>\n                            {guests.map(guest => (\n                                <li key={guest} className={css({ \"bold\": guest == GROOM || guest == BRIDE})}>{guest}</li>\n                            ))}\n                        </ul>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nfunction getDataFromJson(): Table[] {\n    const tablesFile: Tables = JSON.parse(JSON.stringify(tablesJson));\n    return tablesFile.tables;\n}\n\nfunction useFetch<T>(url: string, init?: RequestInit): [T | undefined, boolean, boolean] {\n\n    const [response, setResponse] = useState<T>();\n    const [loading, setLoading] = useState(false);\n    const [hasError, setHasError] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json'\n            },\n            ...init,\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((json) => {\n                setResponse(json);\n                setLoading(false);\n            })\n            .catch(() => {\n                setHasError(true);\n                setLoading(false);\n                setResponse(undefined);\n            })\n    }, [ url ]);\n    return [ response, loading, hasError ]\n}\n","import React from 'react';\nimport ImageGallery, { ReactImageGalleryItem } from 'react-image-gallery';\n\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './PhotoGallery.css';\nimport { NUMBER_OF_IMAGES_IN_GALLERY } from '../../data/constants';\n\nconst images: ReactImageGalleryItem[] = [...Array(NUMBER_OF_IMAGES_IN_GALLERY-1)].map((_, i) => {\n    const index = i+1;\n    const original = process.env.PUBLIC_URL + `/images/gallery/image_${index}.jpg`\n    const thumbnail = process.env.PUBLIC_URL + `/images/gallery/image_${index}_thumbnail.jpg`;\n    return { original, thumbnail }\n});\n\n/**\n * Photo gallery module shows images in responsive image gallery.\n * Navigation is included.\n * Mobile devices is supported.\n * URL to gallery: https://photos.app.goo.gl/5VAfYgihnvYTjmsb6\n */\nexport const PhotoGallery = () => {\n  return (\n    <div className=\"photos component\" id=\"photos\">\n          <ImageGallery items={images} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Header } from \"../app/components/Header\";\nimport { InvitationForm } from \"../app/components/InvitationForm\";\nimport harmonia from \"../assets/harmonia.jpg\";\nimport { Map } from \"../app/components/Map\";\nimport { WeddingTables } from \"../app/components/WeddingTables\";\nimport { PhotoGallery } from \"../app/components/PhotoGallery\";\nimport { Guest } from \"../types/entity/Guest\";\nimport { onFetchGuestsSuccess } from \"../store/guests/epics\";\nimport { useNavigate } from 'react-router-dom';\n\nexport const HomePage = () => {\n\n    const navigate = useNavigate();\n\n    const onUpdate = (rows: Guest[]) => {\n        alert('Thanks for your attendance!');\n        if(rows.length > 0) {\n            onFetchGuestsSuccess(rows);\n            navigate(\"/invitation/\"+ rows[0].invitation_code);\n        }\n    };\n\n    return (\n        <>\n            <Header/>\n            <InvitationForm onUpdate={onUpdate}/>\n            <img src={harmonia} alt=\"Eventová loď Harmónia\" className=\"full-size\"/>\n            <Map/>\n            <WeddingTables/>\n            <PhotoGallery/>\n        </>\n    );\n};","import React from 'react';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { GuestForm } from \"./app/components/GuestForm\";\nimport { HomePage } from \"./pages/HomePage\";\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Routes>\n                    <Route path=\"/invitation/*\" element={<GuestForm/>} />\n                    <Route path=\"*\" element={<HomePage />} />\n                </Routes>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import packageJson from '../../package.json';\n\nclass Setup {\n  configure() {\n    this.log();\n  }\n\n  log(): void {\n    console.log(`Application name: ${packageJson.name}`);\n    console.log(`Application version: ${packageJson.version}`);\n  }\n}\n\nexport default new Setup();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineEpics } from 'redux-observable';\nimport guestsEpic from './guests/epics';\n\nexport const rootEpic = combineEpics(...guestsEpic);\n","import { FETCH_ERROR, RECEIVE, REQUEST, GuestsActionTypes } from './actions';\nimport { Reducer } from 'redux';\nimport { GuestsState, toGuestsPayload } from './types';\n\nexport const reducer: Reducer<GuestsState, GuestsActionTypes> = (\n  state: GuestsState = { isFetching: false, data: [] },\n  action: GuestsActionTypes,\n): GuestsState => {\n  switch (action.type) {\n    case REQUEST:\n      return { ...state, isFetching: true, data: [] };\n    case RECEIVE:\n      return {\n        ...state,\n        isFetching: false,\n        data: toGuestsPayload(action.payload),\n      };\n    case FETCH_ERROR:\n      return { ...state, isFetching: true, data: [] };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers, Reducer } from 'redux';\nimport guests from './guests/reducer';\nimport { connectRouter } from 'connected-react-router';\nimport { BrowserHistory } from 'history';\nimport { ApplicationState } from '../types/applicationState';\n\nconst createRootReducer = (\n  history: BrowserHistory,\n): Reducer<ApplicationState> =>\n  combineReducers({\n    guests: guests,\n    router: connectRouter(history),\n  });\n\nexport default createRootReducer;\n","import { compose, createStore, applyMiddleware, Store } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createLogger } from 'redux-logger';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic } from './rootEpic';\nimport createRootReducer from './rootReducer';\nimport { HashHistory } from 'history';\nimport { ApplicationState } from '../types/applicationState';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst configureStore = (history: HashHistory): Store<ApplicationState> => {\n  const epicMiddleware = createEpicMiddleware();\n  const middleWares = [epicMiddleware, routerMiddleware(history)];\n  if (process.env.NODE_ENV === 'development') {\n    const logger = createLogger({ collapsed: true });\n    middleWares.push(logger);\n  }\n  const store = createStore(\n    createRootReducer(history),\n    // initialState,\n    composeEnhancers(applyMiddleware(...middleWares)),\n  );\n  epicMiddleware.run(rootEpic as any);\n  return store;\n};\n\nexport default configureStore;\n","import { BrowserHistory, createBrowserHistory } from 'history';\nconst history: BrowserHistory = createBrowserHistory();\nexport default history;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport Setup from './utils/setup';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\nimport history from './history';\n\nSetup.configure();\n\nconst store = configureStore(history);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}