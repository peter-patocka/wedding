{"version":3,"sources":["app/components/Map.tsx","data/constants.ts","app/components/Header.tsx","app/components/PhotoGallery.tsx","assets/harmonia.jpg","app/components/WeddingTables.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["Map","className","id","src","title","loading","GROOM","BRIDE","DATE","Date","Header","toLocaleDateString","toLocaleTimeString","href","target","rel","alt","images","Array","NUMBER_OF_IMAGES_IN_GALLERY","map","_","i","index","original","process","thumbnail","PhotoGallery","items","WeddingTables","tables","JSON","parse","stringify","tablesJson","guests","length","reduce","prev","current","guest","css","App","harmonia","store","createStore","state","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"45DAGaA,EAAM,WACjB,OACE,qBAAKC,UAAU,gBAAgBC,GAAG,MAAlC,SACI,wBACIC,IAAI,wQACJC,MAAM,kCACNC,QAAQ,YCRPC,G,YAAQ,sBACRC,EAAQ,2BACRC,EAAO,IAAIC,KAAK,KAAM,EAAG,GAAI,GAAI,G,wBCEjCC,EAAS,WAClB,OACI,qBAAKT,UAAU,mBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,QAAf,UACI,+BAAOM,IADX,MAC2B,+BAAOD,OAElC,sBAAKL,UAAU,OAAf,UAAsB,cAAC,IAAD,IAAtB,IAA+CO,EAAKG,wBACpD,sBAAKV,UAAU,OAAf,UAAsB,cAAC,IAAD,IAAtB,IAAuCO,EAAKI,wBAC5C,sBAAKX,UAAU,QAAf,UACI,oBAAGY,KAAK,+CAA+CC,OAAO,SAA9D,UACI,cAAC,IAAD,IADJ,IAC6B,sBAAMb,UAAU,OAAhB,qCAFjC,qBAKA,kCACA,qBAAKA,UAAU,QAAf,SACI,mBAAGa,OAAO,SACPC,IAAI,aACJF,KAAK,kMAFR,SAGI,qBAAKV,IAAI,+DAA+Da,IAAI,gC,yBCjB9FC,G,YAAkC,YAAIC,MAAMC,KAAgCC,KAAI,SAACC,EAAGC,GACtF,IAAMC,EAAQD,EAAE,EAGhB,MAAO,CAAEE,SAFQC,WAAA,gCAAkDF,EAAlD,QAEEG,UADDD,WAAA,gCAAkDF,EAAlD,uBAUTI,EAAe,WAC1B,OACE,qBAAK1B,UAAU,mBAAmBC,GAAG,SAArC,SACM,cAAC,IAAD,CAAc0B,MAAOX,OCvBhB,MAA0B,qC,iCCY5BY,EAAgB,WACzB,IACMC,EADqBC,KAAKC,MAAMD,KAAKE,UAAUC,IAClBJ,OAQnC,OACI,sBAAK7B,UAAU,qCAAqCC,GAAG,cAAvD,UACI,6CACA,gDARG4B,EACFV,KAAI,SAAAe,GAAM,OAAIA,EAAOC,UACrBC,QAAO,SAACC,EAAMC,GAAP,OAAmBD,EAAOC,QAOlC,qBAAKtC,UAAU,iBAAf,SACK6B,EAAOV,KAAI,SAACe,EAAQZ,GAAT,OACR,sBAAKtB,UAAU,gBAAf,UACI,wCAAWsB,EAAQ,KACnB,mCAAMY,EAAOC,OAAb,cACA,6BACKD,EAAOf,KAAI,SAAAoB,GAAK,OACb,oBAAgBvC,UAAWwC,IAAI,CAAE,KAAQD,GAASlC,GAASkC,GAASjC,IAApE,SAA8EiC,GAArEA,UALejB,YCRzCmB,MAZf,WACE,OACE,sBAAKzC,UAAU,MAAf,UACI,cAAC,EAAD,IACA,qBAAKE,IAAKwC,EAAU3B,IAAI,mCAAwBf,UAAU,cAC1D,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCbK2C,EAAQC,aAAY,SAAAC,GAAK,OAAIA,K,QCUtBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJW,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.498e8df1.chunk.js","sourcesContent":["import React from 'react';\nimport './Map.css';\n\nexport const Map = () => {\n  return (\n    <div className=\"map component\" id=\"map\">\n        <iframe\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1676.1834654972256!2d17.112662658299218!3d48.139557784694354!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zNDjCsDA4JzIyLjQiTiAxN8KwMDYnNDkuNSJF!5e1!3m2!1sen!2ssk!4v1630833775901!5m2!1sen!2ssk\"\n            title=\"48°08'22.4 N 17°06'49.5 E\"\n            loading=\"lazy\">\n        </iframe>\n    </div>\n  );\n};\n","\nexport const GROOM = 'Peter Patočka';\nexport const BRIDE = 'Lucia Lászlóová';\nexport const DATE = new Date(2022, 5, 10, 11, 0);\nexport const NUMBER_OF_IMAGES_IN_GALLERY = 21;","import React from 'react';\nimport './Header.css';\nimport { BRIDE, DATE, GROOM } from '../../data/constants';\nimport * as Icons from \"@material-ui/icons\";\n\nexport const Header = () => {\n    return (\n        <div className=\"header component\">\n            <div className=\"info-block\">\n                <div className=\"names\">\n                    <span>{BRIDE}</span> + <span>{GROOM}</span>\n                </div>\n                <div className=\"date\"><Icons.CalendarToday /> {DATE.toLocaleDateString()}</div>\n                <div className=\"time\"><Icons.Watch /> {DATE.toLocaleTimeString()}</div>\n                <div className=\"place\">\n                    <a href=\"https://www.lod.sk/sk/eventova-lod-harmonia/\" target=\"_blank\">\n                        <Icons.DirectionsBoat /> <span className=\"text\">Loď Harmónia</span>\n                    </a> na rieke Dunaj\n                </div>\n                <section>\n                <div className=\"icons\">\n                    <a target=\"_blank\"\n                       rel=\"noreferrer\"\n                       href=\"https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=N3UwZzc0YThiczkya3NzOTNkN2g4dTkwbWUgMjB2dGxncm9oODMydG9kZDgzMzZzMDFiMTBAZw&amp;tmsrc=20vtlgroh832todd8336s01b10%40group.calendar.google.com\">\n                        <img src=\"https://www.google.com/calendar/images/ext/gc_button1_en.gif\" alt=\"Google Calendar\" />\n                    </a>\n                </div>\n                </section>\n            </div>\n        </div>\n    );\n};","import React from 'react';\nimport ImageGallery, { ReactImageGalleryItem } from 'react-image-gallery';\n\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './PhotoGallery.css';\nimport { NUMBER_OF_IMAGES_IN_GALLERY } from '../../data/constants';\n\nconst images: ReactImageGalleryItem[] = [...Array(NUMBER_OF_IMAGES_IN_GALLERY-1)].map((_, i) => {\n    const index = i+1;\n    const original = process.env.PUBLIC_URL + `/images/gallery/image_${index}.jpg`\n    const thumbnail = process.env.PUBLIC_URL + `/images/gallery/image_${index}_thumbnail.jpg`;\n    return { original, thumbnail }\n});\n\n/**\n * Photo gallery module shows images in responsive image gallery.\n * Navigation is included.\n * Mobile devices is supported.\n * URL to gallery: https://photos.app.goo.gl/5VAfYgihnvYTjmsb6\n */\nexport const PhotoGallery = () => {\n  return (\n    <div className=\"photos component\" id=\"photos\">\n          <ImageGallery items={images} />\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/harmonia.821d4a58.jpg\";","import React from 'react';\nimport tablesJson from '../../data/guestsList.json';\nimport './WeddingTables.css';\nimport { BRIDE, GROOM } from '../../data/constants';\nimport css from 'classnames';\n\ninterface Tables {\n    tables: Table[]\n}\ntype Table = Guest[];\ntype Guest = string;\n\nexport const WeddingTables = () => {\n    const tablesFile: Tables = JSON.parse(JSON.stringify(tablesJson));\n    const tables: Table[] = tablesFile.tables;\n\n    const getTotalGuests = (): number => {\n        return tables\n            .map(guests => guests.length)\n            .reduce((prev, current) => prev + current);\n    };\n\n    return (\n        <div className=\"wedding-tables-container component\" id=\"guests-list\">\n            <h2>Guests list</h2>\n            <h3>Total people: {getTotalGuests()}</h3>\n            <div className=\"wedding-tables\">\n                {tables.map((guests, index) => (\n                    <div className=\"wedding-table\" key={index}>\n                        <h3>Table {index + 1}</h3>\n                        <h4>({guests.length} people)</h4>\n                        <ul>\n                            {guests.map(guest => (\n                                <li key={guest} className={css({ \"bold\": guest == GROOM || guest == BRIDE})}>{guest}</li>\n                            ))}\n                        </ul>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Map } from './app/components/Map'\nimport './App.css';\nimport { Header } from './app/components/Header';\nimport { PhotoGallery } from './app/components/PhotoGallery';\nimport harmonia from './assets/harmonia.jpg';\nimport { WeddingTables } from './app/components/WeddingTables';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header/>\n        <img src={harmonia} alt=\"Eventová loď Harmónia\" className=\"full-size\" />\n        <Map/>\n        <WeddingTables />\n        <PhotoGallery />\n    </div>\n  );\n}\n\nexport default App;\n","import { ThunkAction, Action, createStore } from '@reduxjs/toolkit';\n\nexport const store = createStore(state => state);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}